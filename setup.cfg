[metadata]
name = pyrodigal_gv
version = attr: pyrodigal_gv.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pyrodigal-gv
description = A Pyrodigal extension to predict genes in giant viruses and viruses with alternative genetic code. 
long_description = file: README.md
long_description_content_type = text/markdown
license = GPLv3
platform = any
keywords = bioinformatics, genome, orf, gene, prodigal
classifier =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: OS Independent
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Bug Tracker = https://github.com/althonos/pyrodigal-gv/issues
    Changelog = https://github.com/althonos/pyrodigal-gv/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pyrodigal-gv/
    Builds = https://github.com/althonos/pyrodigal-gv/actions
    PyPI = https://pypi.org/project/pyrodigal-gv

[options]
zip_safe = false
packages = pyrodigal_gv, pyrodigal_gv.tests
include_package_data = false
python_requires = >=3.6
setup_requires =
    setuptools >=46.4
    wheel >=0.23
    packaging >=19.1
install_requires =
    pyrodigal ~=3.1
    importlib-resources ; python_version < '3.9'

[options.package_data]
pyrodigal_gv = py.typed
pyrodigal_gv.tests = *.fna, *.faa, *.txt

[bdist_wheel]
universal = false

[generate_json]
training = vendor/prodigal-gv/training.c
metagenomic = vendor/prodigal-gv/metagenomic.c
output = pyrodigal_gv/meta.json

[coverage:report]
include = pyrodigal_gv/*
omit = pyrodigal_gv/tests/*
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise MemoryError()

[mypy]
exclude = build/

[mypy-pyrodigal_gv]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
